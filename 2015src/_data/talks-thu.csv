Name,Biography,Title,Abstract
Daniel C. Jones,"A graduate student at the University of Washington and author of several Julia packages, most notably Gadfly.","BioJulia: A modern bioinformatics framework
","The past decade, DNA sequencing has become dramatically cheaper, faster, and more accurate. Though a revolution for molecular biology research, the increased emphasis on deep sequencing has made bioinformatics software development increasingly inaccessible to non-expert programmers. While Perl, Python, and its ilk were ideal tools ten years ago, the avalanche of data has necessitated a new generation of highly specific standalone C/C++ tools that, while efficient, lack composability and create a high barrier to entry for contributors and reviewers.

With [BioJulia](https://github.com/BioJulia) we have begun building a Julia framework for computational biology research that is competitive in performance with C/C++ tools while retaining the accessibility and freedom afforded by traditional high-level languages. With a rigorous testing and code review regime, we have emphasized correctness along with speed, laying the groundwork for a vibrant ecosystem of open bioinformatics software.
"
Spencer Lyon,"Spencer Lyon is a 2nd year PhD student at NYU studying economics. He has a background in physics. Spencer’s research interests are broadly contained in the subfield of macro-economics, with particular emphasis on asset pricing and international modeling. Spencer is a devoted open source hacker who hails from the Python world. He is the main author of the QuantEcon.jl package and one of the core members of the quant-econ team. ","Methods, Models, and Moments: Julian Economics","There was a time when economics focused on elegant models of frictionless worlds, but it's now well understood that in order for economic models to replicate real world data series they must include many frictions. The field of economics is in the process of moving from a pen and paper science to a highly computationally intensive science. In short, economists are a huge academic community moving into the computational sphere and starting to explore the new generation of programming tools. As such, now is a very promising time for interaction between the Julia and economics communities. 

The goal of this talk is to introduce Julia users to some of the distinguishing features of computational economics. Among these are dynamic stochastic optimization, statistical inference and data analysis, and stochastic simulation. We will explore the [QuantEcon.jl](https://github.com/QuantEcon/QuantEcon.jl) package and how Julia's expressive type system and advanced compiler make Julia an excellent language for economists."
Kyle Barbary,I am a Cosmology Data Science Fellow at UC Berkeley and the Berkeley Institute for Data Science. I manage several JuliaAstro packages and wrote the Dierckx.jl wrapper for 1-d and 2-d splines.,JuliaAstro,"I will discuss the state of Julia astronomy packages and the small but growing JuliaAstro organization. In the larger astronomy community, many have been moving towards Python over the last decade and this transition is still underway.  I will give some perspective on the prospects for the adoption of Julia in astronomy."
Katharine Hyatt,,Quantum Statistical Simulations with Julia,"Using high-performance computing to probe quantum systems is becoming more and more common in condensed matter physics research. Many of the commonly used languages and techniques in this space are either difficult to learn or not performant. Julia has allowed us to quickly develop and test codes for a variety of commonly used algorithms, including exact diagonalization, DMRG, and quantum Monte Carlo. Its parallel features, including MPI and GPGPU integration, make it particularly attractive for many quantum simulations. I'll discuss what features of Julia have been most useful for us when working on these simulations and the developments we're most excited about."
David Beach,"David Beach has over 15 years of experience developing scientific software, primarily in the finance and defense sectors, and currently designs simulation and target tracking software for the SSA team at Numerica.  Over the past year, he's started using Julia for some small projects, and is turning into a staunch advocate.",Introducing Julia into a Python/C++ Scientific Computing Environment,"Numerica's Space Situational Awareness (SSA) team develops advanced software for tracking satellites.  Most of our software is written in Python, C++, or a hybrid of these.  We have become accustomed to making trade-offs between ease of development and performance.  In this talk, I will highlight some reasons why Julia could be a game-changer for us, with examples involving problems related to satellite tracking."
Art Diky,"I am a PhD student in Computer Science at City University of New York (CUNY). My research interests are in the areas of machine learning, in particular unsupervised learning and pattern recognition, distributed computation and reinforcement learning. I am vivid Julia enthusiast. I wrote several Julia packages, including ManifoldLearning.jl and Evolutionary.jl, and contributed in testing and error fixing to many other packages.",Climate classification and clustering with Julia,"We investigate an objective approach to classifying world climate. We compare linear manifold and K-means clustering methods to derive a classification of climate types using long-term monthly climate data sets. Climate clusters are compared to the Köppen-Geiger climate classification system and analyzed where climate class boundaries change.
Julia language was a main tool used to perform climate data analysis, clustering and reporting. We used Julia to implement the linear manifold (LM) clustering algorithm, LMCLUS.jl, which performs a stochastic search to determine a best location of a bounded LM surrounded by a cluster. Julia provided an outstanding matrix multiplication performance and a parallel computation paradigm which we used in search of a best cluster subspace, along with computationally intensive sensitivity and validation analysis of the clustering results. In our research, we used NetCDF.jl for a data management, Clustering.jl for other clustering methods, Gadfly.jl and RCall.jl for visualizations.
This is a joint work of NASA Goddard Institute for Space Studies (GISS) and Graduate Center City University manifoldof New York."
Simon Danisch,"I develop infrastructure for Julia's 3D Graphic stack, which I want to utilize for interactive, visual programming.

I've created the following packages for that purpose:
Romeo,
GLPlot,
GLAbstraction, 
GLDraw,
GLText,
GLWindow,
ModernGL,
FixedSizeArrays","Hypersignals, a bold vision for interactive Data Visualization","How can Julia + LLVM + Vulkan(OpenGL 5.0) completely change how we program and interact with data?
This is a talk about how a signal based event system can implement bold visions like visual debugging of large data sets, or interactive data visualization like envisioned by Bret Victor.
I will introduce the problems that arise from interactive, high performance visualizations and how they can be solved with state of the art technology."
Jack Minardi,"Jack Minardi is Co-Founder at Voxel8, where he leads the software team. Voxel8 has created the world’s first multi-material 3D printer for fabricating embedded electronics and other novel devices. Prior to working at Voxel8 Jack was a researcher in the Lewis Lab at Harvard University where he developed software for 3D printing. Jack earned a B.S. in electrical engineering from Vanderbilt University.","3D Printing with Julia: Presenting ""Euclid"", a new high performance multimaterial slicer","_Euclid_ is a high performance multimaterial slicer written in Julia. At Voxel8 we have developed the first multimaterial 3D printer capable of producing fully functional electronics, and we needed a new slicer to drive it. Julia is used in production at Voxel8 to convert 3D models into a toolpath the printer executes to build up the model in a process known as ""slicing"". _Euclid_ is a command line application at its core, but we have put it in a Docker container and written a RESTful front-end to interact with it.

This talk will cover our experiences using Julia in production, using `Cxx.jl` to interface with C++ libraries, as well as some more general 3D printing concepts like:

* Mesh file formats (STL, OBJ)
* ""Slicing"" the mesh into layers
* Clipping and insetting
* Thermoplastic extrusion properties."
Josef Heinen,"Josef Heinen is the head of the group ""Scientific IT-Systems"" at the Peter Grünberg Institute / Jülich Centre for Neutron Science, both institutes at Forschungszentrum Jülich, a leading research centre in Germany. The design and development of visualization systems have been an essential part of his activities over the last twenty years. He is involved in several Open Source projects like GLI or GKS. Most recently his team is engaged with the further development of a universal framework for cross-platform visualization applications (GR Framework).",GR.jl - Plotting for Julia based on GR,"Julia is an accepted high-level scripting language for scientific computing and visualization, not least because of the proliferation of libraries such as Gadfly and PyPlot. However, when processing large amounts of data, in particular in combination with three-dimensional plotting (OpenGL), the existing graphics packages are too application-specific or seem to be reaching their limits. In particular, large amounts of data or the visualization of three-dimensional scenes may overwhelm the system.

This presentation shows how visualization applications with special performance requirements can be designed on the basis of GR, a high-performance visualization library for Linux, OS X and Windows. The lecture also introduces a new graphics backend for PyPlot based on the GR framework. By combining the power of those libraries the responsiveness of animated visualization applications and their resulting frame rates can be improved significantly. This in turn allows the use of PyPlot in real-time environments, for example in the area of signal processing.

Using concrete examples, the presentation will demonstrate the benefits of the [GR framework](http://gr-framework.org/) for high-performance graphics or as a companion module for PyPlot. Based on selected applications, the suitability of the GR framework will be highlighted especially in environments where time is critical. The system’s performance capabilities will be illustrated using demanding live applications. In addition, the special abilities of the GR framework are emphasized in terms of interoperability with OpenGL, which opens up new possibilities for existing applications. "
Mike Innes,"I'm a Physics student from the UK who mostly works on Julia when I should be studying. I have a few more-or-less useful projects but the most popular is Juno, a Julia environment I started work on as part as Google Summer of Code, and which now has thousands of users. Recently I've also worked on bringing a much-needed documentation system to Julia 0.4.",Building web-powered applications in Julia,"I'll talk about a path less traveled by most Julia developers: making desktop and web applications. Using the nascent Blink.jl library, I'll demonstrate just what it's capable of via some of the graphical developer tools I've been working on, and I'll show you how quick and easy it is to make user-friendly interfaces for your own applications by building some live from scratch. Finally, we should get a chance to talk about the Julia tools we want to build next, taking advantage of this technology."
Zachary Yedidia,"Zachary Yedidia is a sophomore at Concord Academy High School. He is currently working on a Julia wrapper of SFML (the ""Simple Fast Multimedia Library"").",SFML.jl -- A package for the Simple Fast Multimedia Library,"The SFML library is often used for game development by small companies or hobbyists, but it can also be used to create demonstrations and animations for scientific algorithms. SFML has modules for graphics, audio, and networking. The SFML.jl package I am working on should let Julia users take advantage of SFML to create compelling games and demos easily."
Shashi Gowda,I make UI tools for Julia and JuliaBox users.I brought @manipulate to your IJulia notebooks. :),Escher.jl: A new way to make and deploy GUIs,TBC
Viral Shah,https://in.linkedin.com/in/viralbshah,JuliaBox - Julia in your browser,"We will introduce JuliaBox, its architecture, the things people are using it for, automatic grading in classrooms, and a roadmap for building and serving Julia applications through JuliaBox.

We will describe a roadmap of how complete applications with a web UI (Canvas) and a computational backend can be built effortlessly in Julia and deployed with a single click on JuliaBox."
Sebastien Martin,"Sebastien Martin is a PhD student in Operations Research at MIT. His research focuses on Online Optimization and Transportation. The visualization part of the project was also done with the help of Brandon Zeng, sophomore in Computer Sciences at MIT.","Taxi fleet simulation and visualization","We are considering taxis in a city (represented using LightGraphs.jl) with customers ready to be picked up at different times and locations. We are using JuliaOpt packages to find the best actions of our taxi fleet and maximize their revenues. We then use OpenStreetMap.jl and SFML.jl to visualize the results of the simulations."
Zenna Tavares,"Zenna Tavares is a Ph.D candidate at CSAIL of MIT in the Computer Aided Programming group.  Motivated by problems in both human and artificial intelligence, he studies probabilistic programming languages, inference algorithms and the automated synthesis of programs.

He has worked on two Julia packages: Sigma.jl for probabilistic programming, and Lens.jl, a simple package to analyse runtime behaviour of algorithms.",Julia as a Probabilistic Programming Language,"There has been much debate over Julia's prospects as a viable language for statistical computing.  In this talk I will offer a more exciting possibility: that Julia is uniquely well positioned for probabilistic programming.  I will present Sigma.jl, a Julia package in which you can specify arbitrarily complex probabilistic models as normal Julia programs; general probabilistic inference procedures then attempt to answer any statistical question you pose about the model.

Researchers typically invent entirely new languages for probabilistic programming.  I will describe how we implement Sigma.jl purely as a package by exploiting Julia's introspection and multimethod dispatch capabilities to perform static analyses, dynamically.  This allows us, for instance, to use Julia's existing linear algebra routines over random matrices. I will also outline our algorithmic approach to probabilistic inference, which combines methods from statistics, program analysis and constraint solving, and when combined with Julia enables us to address new classes of probabilistic inference problems."
Chiyuan Zhang,"Chiyuan Zhang is a PhD student at CSAIL, MIT. His research focus on machine learning, speech recognition, and computational neuroscience. He is the author of Mocha.jl, a flexible, feature complete and efficient deep neural network library for Julia.",Mocha.jl - Deep Learning for Julia,"Mocha.jl is a a flexible and efficient deep neural network library supporting multiple backends (CPU and GPU). In this talk, I will present the basic design and architecture of this library and demonstrate how to train a deep convolutional neural network in Julia."
Simon Kornblith,"Simon Kornblith is a graduate student in Brain and Cognitive Sciences at MIT. He has used Julia in his work since 2013. He contributes to several Julia packages, including HDF5, MAT, DSP, and DataArrays, as well as to Julia itself. ",L1 regularized regression,"L1 regularized regression, or the Lasso, is a popular technique for building linear and generalized linear models that selects only a subset of predictors and allows fitting models with more predictors than data points. Modern statistical theory provides a way to determine which of these predictors make significant contributions to the model. I will describe three packages I've created that implement L1 regularized regression in Julia: Lasso.jl, LARS.jl, and GLMNet.jl, and compare their approaches and performance."
Pontus Stenetorp,"Pontus is a research associate at University College London, that spends
most of his research time on Natural Language Processing and Machine Learning.  He has been using Julia since 2014 due to a need for rapid prototyping and computational performance.  When it comes to Julia contributions, he tends to contribute small occasional patches to the standard library.",Suitably Naming a Child with Multiple Nationalities using Julia,"Naming a child is never easy, and for parents that have different native languages it poses further problems.  Ideally, the name should be equally suitable for both of their native tongues, but how can one find such a name?  In this talk we will take a computational approach and attempt to model the suitability of a name using approaches from Natural Language Processing and Machine Learning, and, of course, our language of choice, Julia.  We will cover data collection/processing, mapping strings to phonemes, differences in languages, and the machine learning techniques necessary to modelling the suitability of a name."
John Myles White,Developer of many JuliaStats packages.,What needs to be done to move JuliaStats forward?,"At present, the core JuliaStats libraries, DataArrays and DataFrames, have little to offer that would incentivize statisticians to switch away from R. In this talk, I'll outline a proposal for what the Julia community needs to do to convince a statistician with little-to-no engineering experience to switch languages."
Tony Fong,"Tony Fong is the author of Lint.jl and TermWin.jl, and a contributor to Formatting.jl and Traits.jl.  His background is in physics and finance.  Tony's primary reason of using Julia is modeling of lower dimension electronic systems.",Lint,"A static code analysis package `Lint.jl` will be showcased and discussed. I'll contrast this with other amazing tools such as `code_warntype`, `Typecheck.jl`. Some useful tips and tricks around the tool will be presented, such as lint-time printing and version-dependent linting. "
Tony Kelman,"Helped get Julia 0.3 to pass its unit tests on Windows, and keep them that way by setting up AppVeyor continuous integration for Julia. Contributor to various packages, especially in JuliaOpt.",How to support Windows: cross-platform installation and testing for Julia packages,"A quick walk through the challenges in making Julia packages, specifically those that rely on binary dependencies, available and properly tested for Windows users. The talk will summarize some of the differences in compilers and build environments that are relevant for building scientific software, and some approaches for dealing with them, even for package developers who never use Windows themselves.

Will specifically discuss and show examples of how to cross-compile common libraries, and how to use the openSUSE build service, the WinRPM.jl and BinDeps.jl Julia packages, and AppVeyor continuous integration testing."
Isaiah Norton,"I wrote the Clang.jl package, used to generate Julia bindings for several large (C) libraries, and have contributed to a number of other packages. I am also an active contributor to base Julia.",Automatic ccall wrapper generation with Clang.jl,"Clang.jl is a Julia binding to the C interface to the Clang compiler (libclang), providing access to C, C++, and Objective-C parse trees and associated information. Clang.jl provides a framework for automatic generation of Julia bindings from library headers and has been used to build packages including VideoIO.jl, and Gtk.jl. I will give a brief overview of the wrapped libclang API, the wrapper-generation system, and a wrapper generation example for a new library."
Iain Dunning,"I've been working with Julia for over two years, and have contributed mostly packages: JuliaOpt, Coverage.jl, FactCheck.jl, Humanize.jl, GraphLayout.jl, as well as countless patches to other packages and to Julia itself. My other main contribution is the development of pkg.julialang.org and the PackageEvaluator.jl package ecosystem testing service.","Julia's Package Ecosystem: Past, Present, and Future","A language can live or die depending on the strength of its package ecosystem. I'll present a brief history of how Julia's package ecosystem has grown over the past 3 years. I'll then describe the current situation, including the PackageEvaluator system and pkg.julialang.org. Finally I'll share some thoughts on future work in the area."
Sorami Hisamoto,"Sorami Hisamoto is yet another Julia enthusiast in Tokyo, Japan. He
works as a data analyst, mainly in the marketing area. Prior to that
he was doing researches in the field of Natural Language Processing.","What’s going on at JuliaTokyo?","JuliaTokyo is a community / meetup for Julia enthusiasts in Japan.

From basic tutorial to macros & parallel computing, Deep Learning to
AI Japanese chess, and even an unofficial anime character, we are
having a variety of activities at JuliaTokyo.

In this presentation I would like to introduce how Julia is gaining
its popularity in Japan, what we’ve been doing at JuliaTokyo, and how
we want to interact with the rest of the world in the future."
Leah Hanson,,Contributing to Julia, 
